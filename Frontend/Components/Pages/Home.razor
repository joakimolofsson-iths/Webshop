@page "/"
@using Models
@using Frontend.Components.Pages.UIComponents
@inject Frontend.Services.MoviesService moviesService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@rendermode InteractiveServer

<PageTitle>Horror Movies</PageTitle>

@if (_movies == null || !_movies.Any())
{
    <p><em>Loading...</em></p>
}
else
{
    <Video />

    <Shelf Movies=_movies Cart=_cart />
}

@code {
    private List<Movie> _movies = new();
    private List<int> _cart = new();

    protected override async Task OnInitializedAsync()
    {
        _movies = await moviesService.GetMoviesAsync() ?? new List<Movie>();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _cart = await localStorage.GetItemAsync<List<int>>("cart") ?? new List<int>();
            StateHasChanged();
        };
    }
}