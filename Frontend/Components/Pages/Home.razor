@page "/"
@using Models
@using Frontend.Components.Pages.UIComponents
@inject Frontend.Services.BookService bookService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<Video />

<h1>Horror Books Shop</h1>

@if (_books == null || !_books.Any())
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var book in _books)
    {
        <Product Book=book Cart=_cart />
    }
}

@code {
    private List<Book> _books = new();
    private List<int> _cart = new();

    protected override async Task OnInitializedAsync()
    {
        _books = await bookService.GetBooksAsync() ?? new List<Book>();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _cart = await localStorage.GetItemAsync<List<int>>("cart") ?? new List<int>();
            StateHasChanged();
        };
    }
}