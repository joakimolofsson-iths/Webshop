@using Models
@using Frontend.Components.Pages.UIComponents

<div class="shelfContainer">
    @foreach(var movie in Movies)
    {
        <div class="vhsContainer @(movie == SelectedMovie ? "expanded" : "" )" @onclick="() => ToggleExpanded(movie)">
            <div class="vhsFront">
                <p>@movie.Title</p>
                <img src="@vhsFrontImageMap[movie]" alt="VHS Tape" />
            </div>
            <div class="vhsSide">
                <AddRemove MovieId=movie.Id Cart=Cart />
                <button @onclick="() => DoSomething()" @onclick:stopPropagation="true" @onclick:preventDefault="true">Add to Cart</button>
                <a href="/movies/@movie.Id">Movie Details</a>
                <img src="@movie.ImageUrl" alt="Movie Cover" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public required List<Movie> Movies { get; set; }
    [Parameter] public required List<int> Cart { get; set; }

    private readonly Random _random = new();
    private readonly string[] vhsFrontImages =
    {
        "media/images/vhs_1.jpg",
        "media/images/vhs_2.jpg",
        "media/images/vhs_3.jpg"
    };
    private Movie? SelectedMovie = null;
    private Dictionary<Movie, string> vhsFrontImageMap = new();

    protected override void OnParametersSet()
    {
        foreach (var movie in Movies)
        {
            if (!vhsFrontImageMap.ContainsKey(movie))
            {
                vhsFrontImageMap[movie] = vhsFrontImages[_random.Next(vhsFrontImages.Length)];
            }
        }
    }

    private void ToggleExpanded(Movie movie)
    {
        SelectedMovie = (SelectedMovie == movie) ? null : movie;
    }

    private void DoSomething()
    {
        
    }
}
